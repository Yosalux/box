name: GENERATE APK
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 关键修复步骤：显式指定兼容的Java版本
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'  # 使用与Gradle兼容的JDK发行版
          cache: 'gradle'

      - name: Build With Gradle
        run: |
          # 添加环境清理（CI环境可能需要）
          ./gradlew clean
          
          # 添加构建缓存配置
          ./gradlew assembleRelease \
            --build-cache \
            --parallel \
            --no-daemon \  # 建议CI环境禁用daemon
            --warning-mode all \
            -Dorg.gradle.java.home=$JAVA_HOME  # 显式指定JDK路径

      - name: Prepare App
        run: |
          # 更安全的路径声明方式
          APK_SOURCE="$GITHUB_WORKSPACE/app/build/outputs/apk/release"
          
          # 带错误检查的文件操作
          if [ ! -d "$APK_SOURCE" ]; then
            echo "❌ APK目录不存在: $APK_SOURCE"
            exit 1
          fi

          mkdir -p $GITHUB_WORKSPACE/apk/
          find "$APK_SOURCE" -name '*.apk' -exec cp {} $GITHUB_WORKSPACE/apk/ \;

      - name: Upload App To Artifact
        uses: actions/upload-artifact@v4
        with:
          name: box-${{ github.run_id }}-${{ github.run_attempt }}
          path: ${{ github.workspace }}/apk/*.apk
          retention-days: 7
